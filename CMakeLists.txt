cmake_minimum_required(VERSION 2.6)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)

project(Toucan)

#Find wxWidgets
find_package(wxWidgets COMPONENTS net adv aui stc core base REQUIRED)
set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${wxWidgets_CXX_FLAGS})
include_directories(${wxWidgets_INCLUDE_DIRS})
add_definitions(${wxWidgets_DEFINITIONS})
link_directories(${wxWidgets_LIBRARY_DIRS})

#Define unicode if we need to
if(wxWidgets_CONFIGURATION MATCHES "u")
    add_definitions(-DUNICODE)
endif(wxWidgets_CONFIGURATION MATCHES "u")

if(wxWidgets_CONFIGURATION MATCHES "d")
    add_definitions(-D__WXDEBUG__)
endif(wxWidgets_CONFIGURATION MATCHES "d")

#Find Lua
find_package(Lua51 REQUIRED)
include_directories(${LUA_INCLUDE_DIR})

#Find SWIG
find_package(SWIG REQUIRED)

#Find cxxtest
find_package(CxxTest REQUIRED)
include_directories(${CXXTEST_INCLUDE_DIR})

if(MSVC)
	#Ask if we are using a static CRT
	set(Toucan_Static FALSE CACHE BOOL "Should we use the static CRT?")
    #Disable security warnings
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    #Set the warning level to maximum
    if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
        string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    endif(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")

	if(Toucan_Static)
    #We statically link to reduce dependancies
		foreach(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE)
			if(${flag_var} MATCHES "/MD")
				string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
			endif(${flag_var} MATCHES "/MD")
			if(${flag_var} MATCHES "/MDd")
				string(REGEX REPLACE "/MDd" "/MTd" ${flag_var} "${${flag_var}}")
			endif(${flag_var} MATCHES "/MDd")
		endforeach(flag_var)
	endif(Toucan_Static)
endif(MSVC)

#Traverse through the sub-directories
add_subdirectory(backup)
add_subdirectory(controls)
add_subdirectory(data)
add_subdirectory(forms)
add_subdirectory(secure)
add_subdirectory(sync)

#Link against them
link_directories(backup)
link_directories(controls)
link_directories(data)
link_directories(forms)
link_directories(secure)
link_directories(sync)

#test.cpp is generated by cxxtest
set_source_files_properties(test.cpp PROPERTIES GENERATED true)
#toucan_wrap.cpp is generated by SWIG
set_source_files_properties(toucan_wrap.cpp PROPERTIES GENERATED true)

#Add the source and header files
set(source ${source} basicfunctions.cpp dragndrop.cpp filecounter.cpp)
set(source ${source} job.cpp luamanager.cpp luathread.cpp rules.cpp settings.cpp)
set(source ${source} signalprocess.cpp test.cpp toucan.cpp toucan_wrap.cpp variables.cpp)

set(headers ${headers} basicfunctions.h dragndrop.h filecounter.h)
set(headers ${headers} job.h luamanager.h luathread.h rules.h settings.h)
set(headers ${headers} signalprocess.h test.h toucan.h variables.h)
set(headers ${headers} toucan.i typemaps.i)

if(WIN32)
    #Add the resource file for the icon
    set(source ${source} toucan.rc)
endif(WIN32)

#Generate toucan_wrap.cpp using swig
add_custom_command(
    OUTPUT  ${CMAKE_CURRENT_SOURCE_DIR}/toucan_wrap.cpp
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/toucan.i 
    COMMAND ${SWIG_EXECUTABLE} -o ${CMAKE_CURRENT_SOURCE_DIR}/toucan_wrap.cpp -lua -c++ ${CMAKE_CURRENT_SOURCE_DIR}/toucan.i
)

#Generate test.cpp using cxxtest
add_custom_command(
    OUTPUT  ${CMAKE_CURRENT_SOURCE_DIR}/test.cpp
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/test.h
    COMMAND ${CXXTEST_PYTHON_TESTGEN_EXECUTABLE} -o ${CMAKE_CURRENT_SOURCE_DIR}/test.cpp ${CMAKE_CURRENT_SOURCE_DIR}/test.h
)

#Set up the exe
add_executable(toucan ${source} ${headers})
target_link_libraries(toucan forms backup controls data secure sync ${wxWidgets_LIBRARIES} ${LUA_LIBRARIES})

#Once we have built Toucan move it somewhere suitable
set(Toucan_Output "" CACHE PATH "The path to an existing Toucan installation")
set(Toucan_Exepath ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/toucan${CMAKE_EXECUTABLE_SUFFIX})
add_custom_command(
    TARGET toucan
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${Toucan_Exepath} ${Toucan_Output}/App/Toucan/toucan${CMAKE_EXECUTABLE_SUFFIX}
)
