/////////////////////////////////////////////////////////////////////////////
// Name:        frmprogress.cpp
// Purpose:     
// Author:      Steven Lamerton
// Modified by: 
// Created:     19/05/2007 21:02:04
// RCS-ID:      
// Copyright:   Copyright (C)  2006 Steven Lamerton
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 19/05/2007 21:02:04

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "frmprogress.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "frmprogress.h"
#include "toucan.h"
#include <wx/stdpaths.h>

////@begin XPM images
////@end XPM images

/*!
 * frmProgress type definition
 */

IMPLEMENT_DYNAMIC_CLASS( frmProgress, wxDialog)

/*!
 * frmProgress event table definition
 */

BEGIN_EVENT_TABLE( frmProgress, wxDialog )

////@begin frmProgress event table entries
    EVT_BUTTON( wxID_OK, frmProgress::OnOKClick )

    EVT_BUTTON( wxID_SAVE, frmProgress::OnSAVEClick )

    EVT_BUTTON( wxID_ABORT, frmProgress::OnABORTClick )

////@end frmProgress event table entries
    EVT_IDLE(frmProgress::OnIdle)

    EVT_TIMER(wxID_ANY, frmProgress::OnTimer)

END_EVENT_TABLE()

/*!
 * frmProgress constructors
 */

frmProgress::frmProgress()
{
    Init();
}

frmProgress::frmProgress( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}

/*!
 * frmProgress creator
 */

bool frmProgress::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin frmProgress creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end frmProgress creation
    return true;
    
}

/*!
 * frmProgress destructor
 */

frmProgress::~frmProgress()
{
////@begin frmProgress destruction
////@end frmProgress destruction
}

/*!
 * Member initialisation 
 */

void frmProgress::Init()
{
////@begin frmProgress member initialisation
    m_Progress_Text = NULL;
    m_OK = NULL;
    m_Save = NULL;
    m_Abort = NULL;
////@end frmProgress member initialisation
}

/*!
 * Control creation for frmProgress
 */

void frmProgress::CreateControls()
{    
   if(wxFileExists(wxPathOnly(wxStandardPaths::Get().GetExecutablePath()).Left(wxPathOnly(wxStandardPaths::Get().GetExecutablePath()).Length() - 11) + wxFILE_SEP_PATH + wxT("Data") + wxFILE_SEP_PATH + wxT("fr") + wxFILE_SEP_PATH + wxT("toucan.mo")))
	{
		//Load language if one exists from toucan.h
		wxGetApp().SelectLanguage();
	}
////@begin frmProgress content construction
    frmProgress* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    m_Progress_Text = new wxTextCtrl( itemDialog1, ID_TEXTCTRL1, _T(""), wxDefaultPosition, wxSize(350, 300), wxTE_MULTILINE|wxHSCROLL );
    itemBoxSizer2->Add(m_Progress_Text, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer4 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer4, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    m_OK = new wxButton( itemDialog1, wxID_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer4->Add(m_OK, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_Save = new wxButton( itemDialog1, wxID_SAVE, _("&Save"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer4->Add(m_Save, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_Abort = new wxButton( itemDialog1, wxID_ABORT, _("Abort"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer4->Add(m_Abort, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end frmProgress content construction
//Working here
    wxString strFunction = wxGetApp().GetStrTemp();
    if(strFunction == _("Backup")){
        //wxMessageBox(_("Job fired"));
        wxString command = wxGetApp().GetStrCommand();
        MyPipedProcess *process = new MyPipedProcess(this, command);
        //wxMessageBox(command);
        long lngPID  = wxExecute(command, wxEXEC_ASYNC, process);
        wxGetApp().SetlngPID(lngPID);
        AddAsyncProcess(process);
    }
}

/*!
 * Should we show tooltips?
 */

bool frmProgress::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap frmProgress::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin frmProgress bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end frmProgress bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon frmProgress::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin frmProgress icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end frmProgress icon retrieval
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK
 */

void frmProgress::OnOKClick( wxCommandEvent& event )
{
event.Skip();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_SAVE
 */

void frmProgress::OnSAVEClick( wxCommandEvent& event )
{
		wxString strCaption = _("Save the Log");
		wxString strWildcard;
		strWildcard = wxT("Text Files (*.txt)|*.txt");
		wxString defaultFilename = wxEmptyString;
		wxString defaultDir = wxT("/");
		wxFileDialog dialog(this, strCaption, defaultDir, defaultFilename, strWildcard, wxSAVE);
		if (dialog.ShowModal() == wxID_OK)
		{
			m_Progress_Text->SaveFile(dialog.GetPath());
		}
        
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_ABORT
 */

void frmProgress::OnABORTClick( wxCommandEvent& event )
{
wxGetApp().SetStrAbort(wxT("ABORT"));

if(wxGetApp().GetStrTemp() == _("Backup"))
{
   // wxMessageBox(_("Killing"));
    m_Progress_Text->AppendText(_("\nFinishing..."));
    HANDLE hProcess=OpenProcess(PROCESS_ALL_ACCESS,TRUE,wxGetApp().GetlngPID());
    TerminateProcess(hProcess,0);
}

}

