/////////////////////////////////////////////////////////////////////////////
// Name:        frmvariables.cpp
// Purpose:     
// Author:      Steven Lamerton
// Modified by: 
// Created:     09/12/2006 21:22:14
// RCS-ID:      
// Copyright:   Copyright (C)  2006 Steven Lamerton
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 09/12/2006 21:22:14

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "frmvariable.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "wx/fileconf.h"
#include "puss.h"
#include "frmvariable.h"

////@begin XPM images
////@end XPM images

/*!
 * frmVariables type definition
 */

IMPLEMENT_DYNAMIC_CLASS( frmVariables, wxDialog )

/*!
 * frmVariables event table definition
 */

BEGIN_EVENT_TABLE( frmVariables, wxDialog )

////@begin frmVariables event table entries
    EVT_BUTTON( ID_BITMAPBUTTON_PV_ADD, frmVariables::OnBitmapbuttonPvAddClick )

////@end frmVariables event table entries

END_EVENT_TABLE()

/*!
 * frmVariables constructors
 */

frmVariables::frmVariables( )
{
}

frmVariables::frmVariables( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}

/*!
 * frmVariables creator
 */

bool frmVariables::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin frmVariables member initialisation
////@end frmVariables member initialisation

////@begin frmVariables creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    SetIcon(GetIconResource(wxT("Puss.ico")));
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end frmVariables creation
    return true;
}

/*!
 * Control creation for frmVariables
 */

void frmVariables::CreateControls()
{    


////@begin frmVariables content construction
    // Generated by DialogBlocks, 05/01/2007 10:35:20 (Personal Edition)

    frmVariables* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer3, 0, wxALIGN_LEFT|wxALL, 5);

    wxString* itemComboBox4Strings = NULL;
    wxComboBox* itemComboBox4 = new wxComboBox( itemDialog1, ID_COMBOBOX1, _T(""), wxDefaultPosition, wxSize(200, -1), 0, itemComboBox4Strings, wxCB_DROPDOWN );
    itemBoxSizer3->Add(itemComboBox4, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBitmap itemBitmapButton5Bitmap(itemDialog1->GetBitmapResource(wxT("list-add1.png")));
    wxBitmapButton* itemBitmapButton5 = new wxBitmapButton( itemDialog1, ID_BITMAPBUTTON_PV_ADD, itemBitmapButton5Bitmap, wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBU_EXACTFIT );
    itemBoxSizer3->Add(itemBitmapButton5, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBitmap itemBitmapButton6Bitmap(itemDialog1->GetBitmapResource(wxT("list-remove.png")));
    wxBitmapButton* itemBitmapButton6 = new wxBitmapButton( itemDialog1, ID_BITMAPBUTTON_PVREMOVE, itemBitmapButton6Bitmap, wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBU_EXACTFIT );
    itemBoxSizer3->Add(itemBitmapButton6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer7 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer7, 0, wxALIGN_LEFT|wxALL, 5);

    wxBoxSizer* itemBoxSizer8 = new wxBoxSizer(wxVERTICAL);
    itemBoxSizer7->Add(itemBoxSizer8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 0);

    wxListCtrl* itemListCtrl9 = new wxListCtrl( itemDialog1, ID_LISTCTRL1, wxDefaultPosition, wxSize(200, 300), wxLC_REPORT );
    itemBoxSizer8->Add(itemListCtrl9, 0, wxALIGN_LEFT|wxALL, 5);

    wxBoxSizer* itemBoxSizer10 = new wxBoxSizer(wxVERTICAL);
    itemBoxSizer7->Add(itemBoxSizer10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBitmap itemBitmapButton11Bitmap(itemDialog1->GetBitmapResource(wxT("list-add1.png")));
    wxBitmapButton* itemBitmapButton11 = new wxBitmapButton( itemDialog1, ID_BITMAPBUTTON_PV_LISTADD, itemBitmapButton11Bitmap, wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBU_EXACTFIT );
    itemBoxSizer10->Add(itemBitmapButton11, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxBitmap itemBitmapButton12Bitmap(itemDialog1->GetBitmapResource(wxT("list-remove.png")));
    wxBitmapButton* itemBitmapButton12 = new wxBitmapButton( itemDialog1, ID_BITMAPBUTTON_PV_LISTREMOVE, itemBitmapButton12Bitmap, wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBU_EXACTFIT );
    itemBoxSizer10->Add(itemBitmapButton12, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer13, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxButton* itemButton14 = new wxButton( itemDialog1, ID_BUTTON_PV_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer13->Add(itemButton14, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end frmVariables content construction
}

/*!
 * Should we show tooltips?
 */

bool frmVariables::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap frmVariables::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin frmVariables bitmap retrieval
    wxUnusedVar(name);
    if (name == _T("list-add1.png"))
    {
        wxBitmap bitmap(_T("list-add1.png"), wxBITMAP_TYPE_PNG);
        return bitmap;
    }
    else if (name == _T("list-remove.png"))
    {
        wxBitmap bitmap(_T("list-remove.png"), wxBITMAP_TYPE_PNG);
        return bitmap;
    }
    return wxNullBitmap;
////@end frmVariables bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon frmVariables::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin frmVariables icon retrieval
    wxUnusedVar(name);
    if (name == _T("Puss.ico"))
    {
        wxIcon icon(_T("Puss.ico"), wxBITMAP_TYPE_ICO);
        return icon;
    }
    return wxNullIcon;
////@end frmVariables icon retrieval
}
/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BITMAPBUTTON_PV_ADD
 */

void frmVariables::OnBitmapbuttonPvAddClick( wxCommandEvent& event )
{

    wxTextEntryDialog dialog(this, wxT("Please enter the name for the new portable variable"), wxT("New Portable Variable") ,wxEmptyString, wxOK|wxCANCEL);
    if(dialog.ShowModal() == wxID_OK)
    {
        wxString m_AppDir = wxPathOnly(wxGetApp().GetDirectory());
        wxFileConfig *config = new wxFileConfig( wxT(""), wxT(""), m_AppDir + wxT("\\Settings\\settings.ini") );
        wxMessageBox(m_AppDir);
        wxFileConfig::Set( config );
        //config->Write(compname + wxT("/") + selected, & text1);
    
    }
 
}




/*!
 * frmVariable type definition
 */

IMPLEMENT_DYNAMIC_CLASS( frmVariable, wxDialog )

/*!
 * frmVariable event table definition
 */

BEGIN_EVENT_TABLE( frmVariable, wxDialog )

////@begin frmVariable event table entries
    EVT_BUTTON( wxID_OK, frmVariable::OnOkClick )

    EVT_BUTTON( wxID_CANCEL, frmVariable::OnCancelClick )

////@end frmVariable event table entries

END_EVENT_TABLE()

/*!
 * frmVariable constructors
 */

frmVariable::frmVariable( )
{
}

frmVariable::frmVariable( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}

/*!
 * frmVariable creator
 */

bool frmVariable::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin frmVariable member initialisation
    m_List = NULL;
////@end frmVariable member initialisation

////@begin frmVariable creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end frmVariable creation
    return true;
}

/*!
 * Control creation for frmVariable
 */

void frmVariable::CreateControls()
{    
////@begin frmVariable content construction
    // Generated by DialogBlocks, 23/01/2007 17:39:34 (Personal Edition)

    frmVariable* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer3, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxString* m_ListStrings = NULL;
    m_List = new wxComboBox( itemDialog1, ID_COMBOBOX1, _T(""), wxDefaultPosition, wxSize(150, -1), 0, m_ListStrings, wxCB_DROPDOWN );
    itemBoxSizer3->Add(m_List, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer5, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxButton* itemButton6 = new wxButton( itemDialog1, wxID_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer5->Add(itemButton6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton7 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer5->Add(itemButton7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end frmVariable content construction
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK
 */

void frmVariable::OnOkClick( wxCommandEvent& event )
{
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK in frmVariable.
    // Before editing this code, remove the block markers.
    event.Skip();
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK in frmVariable. 
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL
 */

void frmVariable::OnCancelClick( wxCommandEvent& event )
{
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in frmVariable.
    // Before editing this code, remove the block markers.
    Destroy();
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in frmVariable. 
}

/*!
 * Should we show tooltips?
 */

bool frmVariable::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap frmVariable::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin frmVariable bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end frmVariable bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon frmVariable::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin frmVariable icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end frmVariable icon retrieval
}
